
/**
 * @file sons.h
 *
 * Defines the NodesUnion and node structures.
 *
 * THIS FILE HAS BEEN GENERATED USING
 * $Id: sons.h.xsl 14593 2006-01-31 17:09:55Z cg $.
 * DO NOT EDIT THIS FILE AS MIGHT BE CHANGED IN A LATER VERSION.
 *
 * ALL CHANGES MADE TO THIS FILE WILL BE OVERWRITTEN!
 *
 */

#ifndef _SAC_SONS_H_
#define _SAC_SONS_H_

#include "types.h"


/******************************************************************************
 * For each node a structure of its sons is defined, named
 * SONS_<nodename>
 *****************************************************************************/
struct SONS_N_ASSIGN {
	node           *Let;
	node           *Expr;
};
struct SONS_N_BINOP {
	node           *Left;
	node           *Right;
};
struct SONS_N_BOOL {
};
struct SONS_N_BSCTYPE {
	node           *Bool;
	node           *Num;
	node           *Float;
};
struct SONS_N_DECLS {
	node           *Decl;
	node           *Next;
};
struct SONS_N_DOWHILE {
	node           *Cond;
	node           *Block;
};
struct SONS_N_ERROR {
	node           *Next;
};
struct SONS_N_EXPRSTMT {
	node           *Expr;
};
struct SONS_N_FLOAT {
};
struct SONS_N_FOR {
	node           *Start;
	node           *Stop;
	node           *Step;
	node           *Block;
};
struct SONS_N_FUNBODY {
	node           *Vardecls;
	node           *Localfundefs;
	node           *Stmts;
};
struct SONS_N_FUNDEC {
	node           *FunHeader;
};
struct SONS_N_FUNDEF {
	node           *FunHeader;
	node           *FunBody;
};
struct SONS_N_FUNDEFS {
	node           *Fundef;
	node           *Next;
};
struct SONS_N_FUNHEADER {
	node           *Params;
	node           *RetType;
};
struct SONS_N_GLOBDEC {
};
struct SONS_N_GLOBDEF {
	node           *Expr;
};
struct SONS_N_IFELSE {
	node           *Cond;
	node           *Then;
	node           *Else;
};
struct SONS_N_NUM {
};
struct SONS_N_PARAM {
};
struct SONS_N_PROGRAM {
	node           *Decls;
};
struct SONS_N_RETTYPE {
	node           *BscType;
};
struct SONS_N_RETURN {
	node           *Expr;
};
struct SONS_N_STMTS {
	node           *Stmt;
	node           *Next;
};
struct SONS_N_SYMBOLTABLEENTRY {
};
struct SONS_N_VAR {
};
struct SONS_N_VARDECL {
	node           *Next;
	node           *Expr;
};
struct SONS_N_VARLET {
};
struct SONS_N_WHILE {
	node           *Cond;
	node           *Block;
};
/*****************************************************************************
 * This union handles all different types of sons. Its members are
 * called N_nodename.
 ****************************************************************************/
struct SONUNION {
	struct SONS_N_ASSIGN *N_assign;
	struct SONS_N_BINOP *N_binop;
	struct SONS_N_BOOL *N_bool;
	struct SONS_N_BSCTYPE *N_bsctype;
	struct SONS_N_DECLS *N_decls;
	struct SONS_N_DOWHILE *N_dowhile;
	struct SONS_N_ERROR *N_error;
	struct SONS_N_EXPRSTMT *N_exprstmt;
	struct SONS_N_FLOAT *N_float;
	struct SONS_N_FOR *N_for;
	struct SONS_N_FUNBODY *N_funbody;
	struct SONS_N_FUNDEC *N_fundec;
	struct SONS_N_FUNDEF *N_fundef;
	struct SONS_N_FUNDEFS *N_fundefs;
	struct SONS_N_FUNHEADER *N_funheader;
	struct SONS_N_GLOBDEC *N_globdec;
	struct SONS_N_GLOBDEF *N_globdef;
	struct SONS_N_IFELSE *N_ifelse;
	struct SONS_N_NUM *N_num;
	struct SONS_N_PARAM *N_param;
	struct SONS_N_PROGRAM *N_program;
	struct SONS_N_RETTYPE *N_rettype;
	struct SONS_N_RETURN *N_return;
	struct SONS_N_STMTS *N_stmts;
	struct SONS_N_SYMBOLTABLEENTRY *N_symboltableentry;
	struct SONS_N_VAR *N_var;
	struct SONS_N_VARDECL *N_vardecl;
	struct SONS_N_VARLET *N_varlet;
	struct SONS_N_WHILE *N_while;
};
#endif				/* _SAC_SONS_H_ */
